/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Controller;

/**
 *
 * @author DUNG LE
 */
import Bridge.DBConnection;
import DAO.LoHangDAO;
import DAO.PhieuNhapDAO;
import DAO.SanPhamDAO;
import DAO.TaiChinhDAO;
import DAO.TonKhoDAO;
import Model.LoHang;
import Model.PhieuNhap;
import Model.SanPham;
import Model.TonKho;
import View.LoHangDialog;
import View.LoHangView;
import View.ThongBaodialog;
import View.TrangChuView;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

public class LoHangController {

    private TrangChuView trangChu;
    private LoHangView lhview;
    private LoHangDAO lhDAO;
    private SanPhamDAO spDAO;
    private PhieuNhapDAO pnDAO;
    private TonKhoDAO tkDAO;
    private TonKhoController tkController;
    private TaiChinhDAO tcDAO;
    private Connection conn;
    private TaiChinhController taiChinhController;

    public LoHangController(TrangChuView view, LoHangView panel, TonKhoController tkController) {
        this.trangChu = view;
        this.lhview = panel;
        this.lhDAO = new LoHangDAO();
        this.tcDAO=new TaiChinhDAO();
        this.taiChinhController = taiChinhController;
        try {
            this.conn = DBConnection.getConnection();
            this.spDAO = new SanPhamDAO(conn);
            this.tkDAO = new TonKhoDAO(conn);
            this.tkController = tkController;
        } catch (SQLException e) {
            e.printStackTrace();
            ThongBaodialog.showErrorDialog(lhview, "L·ªói K·∫øt N·ªëi", "Kh√¥ng th·ªÉ k·∫øt n·ªëi CSDL.");
        }
        this.pnDAO = new PhieuNhapDAO();

        // G·∫Øn s·ª± ki·ªán
        panel.addAddListener(e -> themLoHangbtnClicked());
        panel.addDeleteListener(e -> xoaLoHang());

        // T√¨m ki·∫øm theo m√£ ho·∫∑c t√™n s·∫£n ph·∫©m
        panel.addSearchListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                timKiemSanPham();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                timKiemSanPham();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                timKiemSanPham();
            }
        });

        // Click 2 l·∫ßn ƒë·ªÉ s·ª≠a
        lhview.getTable().addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (evt.getClickCount() == 2) {
                    suaLoHangbtnClicked();
                }
            }
        });

        // Tick checkbox khi ch·ªçn d√≤ng
        lhview.getTable().getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                int selectedRow = lhview.getTable().getSelectedRow();
                if (selectedRow != -1) {
                    lhview.getTableModel().setValueAt(true, selectedRow, 0);
                }
            }
        });

        loadTableData();
    }

    private void loadTableData() {
        DefaultTableModel model = lhview.getTableModel();
        model.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        for (LoHang lh : lhDAO.getAllLoHang()) {
            model.addRow(new Object[]{
                false,
                lh.getMaLoHang(),
                lh.getMaPhieuNhap(),
                lh.getTenSanPham(),
                lh.getSoLuong(),
                lh.getDonGia(),
                sdf.format(lh.getNgaySanXuat()),
                sdf.format(lh.getHanSuDung()),
                lh.getGhiChu()
            });
        }
    }

    private void themLoHangbtnClicked() {
//    List<SanPham> dsSP = spDAO.getAll();
//    List<PhieuNhap> dspn = PhieuNhapDAO.getAll();
        LoHangDialog dialog = new LoHangDialog(trangChu, "Th√™m L√¥ H√†ng");
//    dialog.setComboSanPham(dsSP);
//    dialog.setComboPhieuNhap(dspn); // ƒê·ª´ng qu√™n set danh s√°ch phi·∫øu nh·∫≠p
        dialog.setComboPhieuNhap(pnDAO.getAll());
        dialog.setComboSanPham(spDAO.getAll());
        while (true) {
            dialog.setVisible(true);
            if (!dialog.isConfirmed()) {
                break;
            }

            try (Connection conn = DBConnection.getConnection()) {
                // G·ªçi h√†m sinh m√£
                int maLoHang = LoHangDAO.generateNextMaLoHang(conn);
                // L·∫•y d·ªØ li·ªáu t·ª´ dialog
                String maPhieuNhap = dialog.getPhieuNhap();
                int maSanPham = dialog.getSanPham();
                int soLuong = dialog.getSoLuong();
                double donGia = dialog.getDonGia();
                Date ngaySanXuat = new Date(dialog.getNgaySanXuat().getTime());
                Date hanSuDung = new Date(dialog.getHanSuDung().getTime());
                String ghiChu = dialog.getGhiChu();

                // T·∫°o ƒë·ªëi t∆∞·ª£ng
                LoHang lh = new LoHang(maLoHang, maPhieuNhap, maSanPham, soLuong, donGia, ngaySanXuat, hanSuDung, ghiChu);

                // G·ªçi DAO ƒë·ªÉ th√™m v√†o DB
                if (lhDAO.themLoHang(lh)) {

                    // th√™m v√†o t·ªìn kho
                    TonKho tonKho = new TonKho();
                    tonKho.setMaSanPham(maSanPham);
                    tonKho.setMaLo(maLoHang);
                    tonKho.setSoLuongTon(soLuong);
                    tonKho.setSoLuongTrongKho(soLuong);
                    tonKho.setSoLuongKhaDung(soLuong);
                    tonKho.setSoLuongTrenKe(0); // m·∫∑c ƒë·ªãnh, ch∆∞a ra k·ªá
                    tonKho.setSoLuongDangGiaoDich(0);
                    tonKho.setNguongCanhBao(10); // ho·∫∑c c√≥ th·ªÉ set theo sp

                    if (!tkDAO.insert(tonKho)) {
                        ThongBaodialog.showErrorDialog(lhview, "L·ªói", "Kh√¥ng th·ªÉ t·∫°o d√≤ng t·ªìn kho!");
                        return;
                    }
                    loadTableData();
                    if (tkController != null) {
                        tkController.loadTonKhoTable();
                    }
                    ThongBaodialog.showsuccessDialog(lhview, "X√°c Nh·∫≠n", "Th√™m l√¥ h√†ng th√†nh c√¥ng!ƒê√£ c·∫≠p nh·∫≠t s·∫£n ph·∫©m v√†o kho");

                    // üîΩ G·ªçi th√™m kho·∫£n chi sau khi th√™m l√¥ h√†ng xong
                    boolean success = tcDAO.insertChiTuTatCaPhieuNhap();
                    if (success) {
                        JOptionPane.showMessageDialog(null, "ƒê√£ t·ª± ƒë·ªông th√™m kho·∫£n **chi** v√†o b·∫£ng t√†i ch√≠nh.");
                        if (taiChinhController != null) {
                            taiChinhController.loadData(null);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Kh√¥ng th·ªÉ th√™m kho·∫£n chi. C√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i ho·∫∑c d·ªØ li·ªáu ch∆∞a ƒë·ªß.");
                    }
                } else {
                    ThongBaodialog.showErrorDialog(lhview, "L·ªói", "Th√™m th·∫•t b·∫°i!");
                }
            } catch (Exception ex) {
                ThongBaodialog.showErrorDialog(dialog, "L·ªói", ex.getMessage());
                ex.printStackTrace();
            }

            break;
        }
    }

    private void suaLoHangbtnClicked() {
        int row = lhview.getTable().getSelectedRow();
        if (row == -1) {
            ThongBaodialog.showWarningDialog(lhview, "Th√¥ng b√°o", "Vui l√≤ng ch·ªçn d√≤ng ƒë·ªÉ s·ª≠a.");
            return;
        }

        int maLo = Integer.parseInt(lhview.getTableModel().getValueAt(row, 1).toString());
        String maPhieuNhap = lhview.getTableModel().getValueAt(row, 2).toString();
        String tenSP = lhview.getTableModel().getValueAt(row, 3).toString();
        int soLuong = Integer.parseInt(lhview.getTableModel().getValueAt(row, 4).toString());
        double donGia = Double.parseDouble(lhview.getTableModel().getValueAt(row, 5).toString());
        String ngaySXStr = lhview.getTableModel().getValueAt(row, 6).toString();
        String hanSDStr = lhview.getTableModel().getValueAt(row, 7).toString();
        String ghiChu = lhview.getTableModel().getValueAt(row, 8).toString();

//    List<SanPham> dsSP = spDAO.getAll();
        LoHangDialog dialog = new LoHangDialog(trangChu, "S·ª≠a L√¥ H√†ng");
        dialog.setComboPhieuNhap(pnDAO.getAll());
        dialog.setComboSanPham(spDAO.getAll());
        dialog.setf(maPhieuNhap, tenSP, soLuong, donGia, ngaySXStr, hanSDStr, ghiChu);  // G√°n d·ªØ li·ªáu v√†o dialog

        while (true) {
            dialog.setVisible(true);
            if (!dialog.isConfirmed()) {
                break;
            }

            try {
                // üü¢ L·∫•y theo ƒë√∫ng th·ª© t·ª± y√™u c·∫ßu
                String newMaPhieuNhap = dialog.getPhieuNhap();
                int newMaSanPham = dialog.getSanPham();
                int newSoLuong = dialog.getSoLuong();
                double newDonGia = dialog.getDonGia();
                Date newNgaySX = dialog.getNgaySanXuat();
                Date newHanSD = dialog.getHanSuDung();
                String newGhiChu = dialog.getGhiChu();

                // T·∫°o ƒë·ªëi t∆∞·ª£ng c·∫≠p nh·∫≠t
                LoHang updated = new LoHang(maLo, newMaPhieuNhap, newMaSanPham, newSoLuong, newDonGia, newNgaySX, newHanSD, newGhiChu);

                if (lhDAO.capNhatLoHang(updated)) {
                    DefaultTableModel model = lhview.getTableModel();

                    // T√¨m t√™n SP ƒë·ªÉ hi·ªÉn th·ªã thay cho m√£
                    loadTableData();
                    ThongBaodialog.showsuccessDialog(lhview, "X√°c Nh·∫≠n", "S·ª≠a th√†nh c√¥ng!");
                } else {
                    ThongBaodialog.showErrorDialog(lhview, "L·ªói", "S·ª≠a th·∫•t b·∫°i!");
                }
            } catch (Exception ex) {
                ThongBaodialog.showErrorDialog(dialog, "L·ªói", ex.getMessage());
                ex.printStackTrace();
            }
            break;
        }
    }

    private void xoaLoHang() {
        DefaultTableModel model = lhview.getTableModel();
        List<Integer> rowsToDelete = new ArrayList<>();

        for (int i = 0; i < model.getRowCount(); i++) {
            Boolean checked = (Boolean) model.getValueAt(i, 0);
            if (checked != null && checked) {
                rowsToDelete.add(i);
            }
        }

        if (!rowsToDelete.isEmpty()) {
            boolean confirmed = ThongBaodialog.showConfirmDialog(lhview, "X√°c Nh·∫≠n", "B·∫°n c√≥ ch·∫Øc mu·ªën xo√° " + rowsToDelete.size() + " d√≤ng?");
            if (confirmed) {
                for (int i = rowsToDelete.size() - 1; i >= 0; i--) {
                    int row = rowsToDelete.get(i);
                    int maLo = Integer.parseInt(model.getValueAt(row, 1).toString());
                    if (lhDAO.xoaLoHang(maLo)) {
                        model.removeRow(row);
                    } else {
                        ThongBaodialog.showErrorDialog(lhview, "L·ªói", "Xo√° th·∫•t b·∫°i m√£ l√¥: " + maLo);
                    }
                }
                updateMaLoHang(model);
                ThongBaodialog.showsuccessDialog(lhview, "Th√†nh C√¥ng", "Xo√° th√†nh c√¥ng!");
            }
        } else {
            ThongBaodialog.showWarningDialog(lhview, "Th√¥ng B√°o", "Vui l√≤ng tick ch·ªçn d√≤ng ƒë·ªÉ xo√°.");
        }
    }

    private void updateMaLoHang(DefaultTableModel model) {
        for (int i = 0; i < model.getRowCount(); i++) {
            int newMaPhieu = i + 1;
            String oldMaPhieu = model.getValueAt(i, 1).toString();

            // C·∫≠p nh·∫≠t trong DB
            if (lhDAO.updateMaLoHang(oldMaPhieu, newMaPhieu)) {
                // N·∫øu th√†nh c√¥ng th√¨ c·∫≠p nh·∫≠t trong b·∫£ng
                model.setValueAt(newMaPhieu, i, 1);
            } else {
                ThongBaodialog.showErrorDialog(lhview, "L·ªói", "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t m√£ phi·∫øu t·ª´ " + oldMaPhieu + " -> " + newMaPhieu);
            }
        }
    }

    private void timKiemSanPham() {
        String keyword = lhview.getSearchText().trim();
        DefaultTableModel model = lhview.getTableModel();
        model.setRowCount(0);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

        for (LoHang lh : lhDAO.timKiemLoHang(keyword)) {
            model.addRow(new Object[]{
                false,
                lh.getMaLoHang(),
                lh.getMaPhieuNhap(),
                lh.getTenSanPham(),
                lh.getSoLuong(),
                lh.getDonGia(),
                sdf.format(lh.getNgaySanXuat()),
                sdf.format(lh.getHanSuDung()),
                lh.getGhiChu()
            });
        }
    }

}
